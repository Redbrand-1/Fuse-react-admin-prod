{"version":3,"sources":["constant/colors.ts","components/navbar/style.ts","setting/navbarWidth.ts","components/navbar/header.tsx","links/index.ts","pages/page1.tsx","pages/page2.tsx","pages/page3.tsx","components/navbar/links.tsx","setting/user.ts","components/navbar/avatar/index.tsx","components/navbar/index.tsx","layout/main.tsx","constant/type.ts","store/reducer/width.ts","store/init.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["colors","useStyles","makeStyles","theme","createStyles","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","background","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","PersistentDrawer","props","classes","className","style","color","CssBaseline","AppBar","position","clsx","open","Toolbar","IconButton","aria-label","onClick","setOpen","edge","Typography","variant","noWrap","links","icon","HomeIcon","url","text","page","FormatAlignJustifyIcon","QuestionAnswerIcon","linksNvabar","map","val","linksRoute","Links","link","index","List","key","ListItem","button","ListItemIcon","ListItemText","primary","to","user","margin","ava","height","AvatarComp","useTheme","handleDrawerClose","direction","Avatar","alt","src","Navbar","useState","Drawer","anchor","paper","Divider","component","MainLayout","children","dispatch","useDispatch","useEffect","type","window","innerWidth","addEventListener","minHeight","initState","rootReducer","combineReducers","state","action","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","App","store","initializeStore","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2db54557.chunk.js","sourcesContent":["export const  colors = {\r\n  primaryLight: '#4791db' ,\r\n  successMain: '#ffffff'\r\n}","import { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { NavWidth } from '../../setting/navbarWidth'\r\nimport { colors } from '../../constant/colors'\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      background: colors.primaryLight\r\n    },\r\n    appBarShift: {\r\n      width: `calc(100% - ${NavWidth}px)`,\r\n      marginLeft: NavWidth,\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: NavWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: NavWidth,\r\n      background: colors.primaryLight\r\n    },\r\n    drawerHeader: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(0, 1),\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      marginLeft: -NavWidth,\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: 0,\r\n    },\r\n  }),\r\n);","export const NavWidth = 250","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\n\r\nimport { useStyles } from './style'\r\n\r\ninterface Props {\r\n  open: boolean\r\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\nexport const PersistentDrawer = (props:Props) =>  {\r\n  const classes = useStyles();\r\n\r\n  const handleDrawerOpen = () => {\r\n    props.setOpen(true);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root} style={{color:' red'}}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: props.open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, props.open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Меню\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      </div>\r\n  );\r\n}","import HomeIcon from '@material-ui/icons/Home'\r\n\r\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify'\r\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer'\r\n\r\nimport { Page1 } from '../pages/page1'\r\nimport { Page2 } from '../pages/page2'\r\nimport { Page3 } from '../pages/page3'\r\n\r\nconst links = [\r\n  { \r\n    icon: HomeIcon,\r\n    url: '/1',\r\n    text: '1 страница',\r\n    page: Page1\r\n  },\r\n  { \r\n    icon: FormatAlignJustifyIcon,\r\n    url: '/2',\r\n    text: '2 страница',\r\n    page: Page2\r\n  },\r\n  {\r\n    icon: QuestionAnswerIcon,\r\n    url: '/3',\r\n    text: '3 страница',\r\n    page: Page3\r\n  },\r\n]\r\n\r\n///////////////\r\nexport const linksNvabar = links.map(val => {\r\n  return {icon: val.icon, url: val.url, text: val.text}\r\n})\r\n\r\nexport const linksRoute = links.map(val => {\r\n  return {url: val.url, page: val.page}\r\n})\r\n","import React from 'react'\r\n\r\nexport const Page1 = () => {\r\n  return (\r\n    <h1>page 1</h1>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport const Page2 = () => {\r\n  return (\r\n    <h1>page 2</h1>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport const Page3 = () => {\r\n  return (\r\n    <h1>page 3</h1>\r\n  )\r\n}","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\n\r\nimport { colors } from '../../constant/colors'\r\n\r\nimport { linksNvabar } from '../../links'\r\n\r\n\r\nexport const Links = () => {\r\n\r\n  return (\r\n    <>\r\n    {\r\n    linksNvabar.map((link, index) => {\r\n      return (\r\n        <List key={index}>\r\n        <ListItem button >\r\n          <ListItemIcon>\r\n            <link.icon />\r\n          </ListItemIcon>\r\n            <ListItemText primary={\r\n              <Link style = {{color: colors.successMain}} to={link.url} > {link.text} </Link>\r\n            } />\r\n        </ListItem>\r\n        </List>\r\n      )\r\n    })\r\n    }\r\n    </>\r\n  )\r\n}","export const user = {\r\n  name: 'Вася пупкин',\r\n  role: 'Оператор'\r\n}","import React from 'react'\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport {useTheme} from '@material-ui/core/styles';\r\n\r\nimport { user } from '../../../setting/user'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      '& > *': {\r\n        margin: theme.spacing(2),\r\n      },\r\n    },\r\n    ava: {\r\n      width: theme.spacing(8),  \r\n      height: theme.spacing(8),\r\n    },\r\n    icon: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      margin: theme.spacing(1),\r\n    },\r\n\r\n  }),\r\n)\r\n\r\ninterface Props {\r\n  handleDrawerClose: () => void\r\n}\r\n\r\nexport const AvatarComp = (props: Props) => {\r\n  const classes = useStyles()\r\n  const theme = useTheme()\r\n\r\n  return (\r\n    <>\r\n    <div className={classes.icon}>\r\n    <IconButton onClick={props.handleDrawerClose} className={classes.icon}>\r\n      {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n    </IconButton>\r\n    </div>\r\n    <div className={classes.root} >\r\n      \r\n      <Avatar alt=\"Travis Howard\" src=\"\" className={classes.ava} />\r\n      <div>\r\n        <p>{user.name}</p>\r\n        <p>{user.role}</p>\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport clsx from 'clsx';\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport List from '@material-ui/core/List'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport { PersistentDrawer } from './header'\r\n\r\nimport { Links } from './links'\r\nimport { AvatarComp } from './avatar'\r\n\r\nimport { useStyles } from './style'\r\n\r\ninterface WidthInt {\r\n  width: {\r\n    width: number\r\n  }\r\n}\r\n\r\nexport const Navbar = () => {\r\n  const classes = useStyles()\r\n  const [open, setOpen] = useState<boolean>(false)\r\n\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    <CssBaseline />\r\n    <PersistentDrawer open={open} setOpen={setOpen}/>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n      <AvatarComp  handleDrawerClose={handleDrawerClose}/>\r\n      <Divider />\r\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n          <Links />  { /**  експорт  */ }\r\n      </List>\r\n    </Drawer>\r\n    <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n\r\n      </main>\r\n    </div>\r\n  )\r\n}","import React, { useEffect } from 'react'\r\n\r\nimport { Navbar } from '../components/navbar'\r\nimport { useDispatch } from 'react-redux'\r\nimport { ADD_WIDTH  } from '../constant/type'\r\n\r\nexport const MainLayout = ({ children }: any) => {\r\n\r\n  const dispatch = useDispatch()\r\n  //  ширина нужна для слайдера  загрузки баннеров мини или фулл\r\n  useEffect(() => {\r\n    dispatch({ // ширина екрана при запуске\r\n      type: ADD_WIDTH,\r\n      width: window.innerWidth\r\n    })\r\n     // eslint-disable-next-line\r\n  }, [true])\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', ()=>{\r\n      dispatch({ // ширина екрана \r\n        type: ADD_WIDTH,\r\n        width: window.innerWidth\r\n      })\r\n    })\r\n     // eslint-disable-next-line\r\n  }, [true])\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '80vh'}}>\r\n        {children}\r\n      </div>\r\n    </>\r\n  )\r\n}","export const ADD_WIDTH = 'ADD_WIDTH'\r\nexport interface TypeWidth {\r\n  type: string\r\n  width: number,\r\n}\r\n","import { StoreWidth } from '../../constant/store'\r\nimport { TypeWidth, ADD_WIDTH } from '../../constant/type'\r\n\r\n\r\nconst initState: StoreWidth  = {\r\n  width: 0,\r\n}\r\n\r\nexport const width = ( state = initState , action: TypeWidth ) => {\r\n  switch (action.type) {\r\n    case ADD_WIDTH  : {\r\n      return {\r\n        width: action.width\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}","import { compose, createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport {width}from './reducer/width';\r\n\r\nconst rootReducer = combineReducers({\r\n  width\r\n})\r\n\r\n\r\nconst middleware = [thunk];\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default createStore(rootReducer, composeEnhancers(applyMiddleware(...middleware)));","import React from 'react';\nimport { MainLayout } from './layout/main'\n\nimport { Provider } from 'react-redux'\nimport initializeStore from './store/init'\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport { linksRoute } from './links'\n\nfunction App() {\n  return (\n    <Provider store={initializeStore}>\n    <Router>\n      <MainLayout>\n        \n          {\n            linksRoute.map( (link, index) => {\n              return (\n                <Route key={index} path={link.url}>\n                  <link.page />\n                </Route>\n              )\n            })\n          }\n          <Redirect to='/1' />\n        \n      </MainLayout>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}